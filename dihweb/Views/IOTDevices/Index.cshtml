@{
    ViewData["Title"] = "IOT Devices";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Customer Clusters</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Dashboard</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>IOT Devices</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-md-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>IOT Devices</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-12">
                            @(Html.DevExtreme().DataGrid<dihweb.Models.Device>()
            .DataSource(ds => ds.Mvc()
                .Controller("IOTDevicesData")
                .LoadAction("Get")
                .Key("device_id")
            )
            .RemoteOperations(true)
            .Columns(columns => {

            columns.AddFor(m => m.device_id);
            columns.AddFor(m => m.service);
            columns.AddFor(m => m.entity_type);
            columns.AddFor(m => m.entity_name);
            columns.AddFor(m => m.transport);

            columns.Add()
                .CssClass("dx-command-edit dx-command-edit-with-icons dx-cell-focus-disabled")
                .Alignment(HorizontalAlignment.Center)
                    .CellTemplate(@<text>

                                    <a
                                        class="dx-link dx-link-trash dx-icon-trash dx-link-icon"
                                        href="@Url.Action("Delete", "IOTDevices")?deviceID=<%= data.device_id %>&service=<%= data.service %>"
                                        title="Delete" />
                                    </text>);
                            })
                            .Editing(e => e
                            .AllowAdding(false)
                            .AllowUpdating(false)
                            .AllowDeleting(false)
                            )
                            .ShowBorders(true)
                            .ShowColumnHeaders(true)
                            .ShowColumnLines(true)
                            .ShowRowLines(true)
                            .RowAlternationEnabled(true)
                            .Paging(paging =>
                            {
                                paging.Enabled(true);
                                paging.PageSize(10);
                            })
                            .Pager(pager =>
                            {
                                pager.ShowPageSizeSelector(true);
                                pager.AllowedPageSizes(new[] { 10, 20, 50 });
                                pager.ShowInfo(true);
                            })
                            .SearchPanel(e =>e
                            .Visible(true)
                            .Width(240)
                            .Placeholder("Search...")
                            )
                            .FilterPanel(f => f.Visible(true))
                                .FilterBuilderPopup(p =>
                                    p.Position(pos =>
                                        pos.At(HorizontalAlignment.Center, VerticalAlignment.Top)
                                            .My(HorizontalAlignment.Center, VerticalAlignment.Top)
                                            .Offset(0, 10)
                                    )
                                )
                            .FilterRow(filterRow => filterRow.Visible(true))
                            .OnToolbarPreparing("toolbar_preparing"))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function toolbar_preparing(e) {
        var dataGrid = e.component;
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                icon: "add",
                onClick: function () {
                    var url = '@Url.Action("Create", "IOTDevices")';
                    window.location.href = url;
                }
            }
        });
    }
</script>