@{
    ViewData["Title"] = "Device Log";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Device Log</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Dashboard</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "ManualOperation")">Manual Operation</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Device Log</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-md-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Device Log</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-12">
                            @(Html.DevExtreme().DataGrid<dihweb.ViewModels.DeviceLogVM>()
                                .DataSource(ds => ds.Mvc()
                                    .Controller("ManageDevicesControllerData")
                                    .LoadAction("GetLog")
                                    .UpdateAction("UpdateTask")
                                    .LoadParams(new { ID = ViewBag.ID })
                                )
                                .Columns(columns =>
                                {
                                    columns.AddFor(m => m.DeviceName);
                                    columns.AddFor(m => m.Status);
                                    columns.AddFor(m => m.Time).Format("dd/MM/yyy HH:mm:ss");
                                })
                            .Editing(e => e
                            .AllowAdding(false)
                            .AllowUpdating(false)
                            .AllowDeleting(false)
                            )
                            .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                            .ShowBorders(true)
                            .ShowColumnHeaders(true)
                            .ShowColumnLines(true)
                            .ShowRowLines(true)
                            .RowAlternationEnabled(true)
                            .Paging(paging =>
                            {
                                paging.Enabled(true);
                                paging.PageSize(10);
                            })
                            .Pager(pager =>
                            {
                                pager.ShowPageSizeSelector(true);
                                pager.AllowedPageSizes(new[] { 10, 20, 50 });
                                pager.ShowInfo(true);
                            })
                            .SearchPanel(e =>e
                            .Visible(true)
                            .Width(240)
                            .Placeholder("Search...")
                            ))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>