@{
    ViewData["Title"] = "Manage Devices";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Manage Devices</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Dashboard</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Manage Devices</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-md-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Manage Devices</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-12">
                            @(Html.DevExtreme().DataGrid<dihweb.Models.Devices>()
                                .DataSource(ds => ds.Mvc()
                                    .Controller("ManageDevicesControllerData")
                                    .LoadAction("Get")
                                    .UpdateAction("UpdateTask")
                                    .Key("ID")
                                )
                                .Columns(columns =>
                                {
                                    columns.AddFor(m => m.ID);
                                    columns.AddFor(m => m.DeviceName);
                                    columns.AddFor(m => m.DeviceType.IOTAgentType);
                                    columns.AddFor(m => m.OrderIndex);

                                    columns.Add()
                .CssClass("dx-command-edit dx-command-edit-with-icons dx-cell-focus-disabled")
                .Alignment(HorizontalAlignment.Center)
                    .CellTemplate(@<text>

                                    <a
                                        class="dx-link dx-link-trash dx-icon-trash dx-link-icon"
                                        href="@Url.Action("Delete", "ManageDevices")?ID=<%= data.ID %>"
                                        title="Delete" />
                                    </text>);
                                })
                            .Editing(e => e
                            .AllowAdding(false)
                            .AllowUpdating(false)
                            .AllowDeleting(false)
                            )
                            .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                            .Sorting(sorting => sorting.Mode(GridSortingMode.None))
                            .RowDragging(rd => rd
                            .AllowReordering(true)
                            .DropFeedbackMode(DropFeedbackMode.Push)
                            .OnReorder("onReorder")
                            )
                            .ShowBorders(true)
                            .ShowColumnHeaders(true)
                            .ShowColumnLines(true)
                            .ShowRowLines(true)
                            .RowAlternationEnabled(true)
                            .Paging(paging =>
                            {
                            paging.Enabled(true);
                            paging.PageSize(10);
                            })
                            .Pager(pager =>
                            {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 10, 20, 50 });
                            pager.ShowInfo(true);
                            })
                            .SearchPanel(e =>e
                            .Visible(true)
                            .Width(240)
                            .Placeholder("Search...")
                            ))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function onReorder(e) {
        var dataGrid = e.component,
            store = dataGrid.getDataSource().store(),
            visibleRows = dataGrid.getVisibleRows(),
            newOrderIndex = visibleRows[e.toIndex].data.OrderIndex,
            d = $.Deferred();
        store.update(e.itemData.ID, { OrderIndex: newOrderIndex }).then(function () {
            dataGrid.refresh().then(d.resolve, d.reject);
        }, d.reject);
        e.promise = d.promise();
    }
</script>